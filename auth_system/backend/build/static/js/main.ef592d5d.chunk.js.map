{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/index.js","store.js","containers/Activate.js","containers/Home.js","actions/auth.js","containers/Login.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Signup.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Activate","Home","className","to","role","load_user","dispatch","a","config","headers","axios","get","process","res","data","connect","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","reset_password","requestSent","setRequestSent","reset_password_confirm","uid","token","new_password","re_new_password","match","params","Signup","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","checkAuthenticated","code","children","useEffect","App","exact","path","component","Login","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef592d5d.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const PASSWORD_RESET_SUCCESS  = 'PASSWORD_RESET_SUCCESS'\r\nexport const PASSWORD_RESET_FAIL  = 'PASSWORD_RESET_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_FAIL  = 'PASSWORD_RESET_CONFIRM_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS  = 'PASSWORD_RESET_CONFIRM_SUCCESS'\r\n\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated:null,\r\n    user:null\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    const {type, payload} = action\r\n    switch(type){\r\n        case AUTHENTICATED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true,\r\n                access:payload.access,\r\n                refresh:payload.refresh   \r\n            }\r\n        case LOAD_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user:payload\r\n            }\r\n            \r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:false\r\n            }    \r\n\r\n        case LOAD_USER_FAIL:\r\n            return{\r\n                ...state,\r\n                user:null\r\n            }\r\n        case LOGOUT:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return{\r\n                ...state,\r\n                isAuthenticated:false,\r\n                access:null,\r\n                refresh:null\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers} from 'redux'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initalState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst Activate = () => {\r\n    return (\r\n        <div>\r\n            Activate\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Activate\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">Hello, world! Welcome to Auth System</h1>\r\n                <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\r\n                <hr className=\"my-4\"/>\r\n                <p>Click the login button</p>\r\n                <p className=\"lead\">\r\n                    <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Learn more</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    LOGOUT,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS\r\n} from './types'\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if(localStorage.getItem('access')){\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({token:localStorage.getItem('access')})\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify`,body, config)\r\n            if (res.data.code !== 'token_not_valid'){\r\n                dispatch({\r\n                    type:AUTHENTICATED_SUCCESS\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:AUTHENTICATED_FAIL\r\n                })\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type:AUTHENTICATED_FAIL\r\n            })\r\n        }\r\n\r\n    }else{\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n                config\r\n            )\r\n            dispatch({\r\n                type:LOAD_USER_SUCCESS,\r\n                payload:res.data\r\n            })\r\n            \r\n        }catch(err){\r\n            dispatch({\r\n                type: LOAD_USER_FAIL\r\n            })\r\n        }   \r\n    }else{\r\n        dispatch({\r\n            type: LOAD_USER_FAIL\r\n        })     \r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try{\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        })\r\n        dispatch(load_user())\r\n        \r\n    }catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email})\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n        dispatch({\r\n            type:PASSWORD_RESET_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PASSWORD_RESET_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password})\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n        dispatch({\r\n            type:PASSWORD_RESET_CONFIRM_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PASSWORD_RESET_CONFIRM_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../actions/auth'\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        login(email, password)\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (isAuthenticated){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='email' \r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='password'\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account ? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your password ? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React, {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {reset_password} from '../actions/auth'\r\n\r\nconst ResetPassword = ({reset_password}) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (requestSent){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset</h1>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='email' \r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(null, {reset_password})(ResetPassword)\r\n","import React, {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {reset_password, reset_password_confirm} from '../actions/auth'\r\n\r\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    })\r\n    const {new_password, re_new_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        const uid = match.params.uid\r\n        const token = match.params.token\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n\r\n\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (requestSent){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='new password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='confirm new password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(null, {reset_password_confirm})(ResetPasswordConfirm)\r\n","import React from 'react'\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div>\r\n                singup\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { logout } from '../actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = ({logout, isAuthenticated}) => {\r\n    const guestLinks = () => (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\r\n            </li>\r\n        </>\r\n    )\r\n\r\n    const authLinks = () => (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\" onClick={logout}>Logout</a>\r\n            </li>\r\n\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                </li>\r\n                {isAuthenticated ? authLinks():guestLinks()}\r\n            </ul>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar)\r\n","import React, {useEffect} from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport {checkAuthenticated, load_user} from '../actions/auth'\r\n\r\nconst Layout = ({children, checkAuthenticated, load_user}) => {\r\n    useEffect(()=>{\r\n        checkAuthenticated()\r\n        load_user()\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {checkAuthenticated, load_user}) (Layout)\r\n","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport Activate from './containers/Activate';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Signup from './containers/Signup';\nimport Layout from './hocs/Layout';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/reset-password' component={ResetPassword}/>\n            <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\n            <Route exact path='/activate/:uid/:token' component={Activate}/>\n            <Route exact path='/signup' component={Signup}/>\n          </Switch>\n        </Layout>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}