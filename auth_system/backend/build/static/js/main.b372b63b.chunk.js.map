{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/index.js","store.js","actions/auth.js","containers/Activate.js","containers/Home.js","containers/Login.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Signup.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOAD_USER_SUCCESS","LOAD_USER_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATE_SUCCCESS","ACTIVATE_FAIL","initialState","access","localStorage","getItem","refresh","isAuthenticated","user","combineReducers","auth","state","action","type","payload","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","load_user","dispatch","a","config","headers","axios","get","process","res","data","connect","verify","uid","token","body","JSON","stringify","post","match","useState","verified","setVerified","to","className","style","marginTop","onClick","e","params","Home","role","login","email","password","formData","setFormData","loginError","setLoginError","onChange","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","signup","re_password","accountCreated","setaccountCreated","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","code","children","useEffect","App","exact","path","component","Login","ResetPassword","ResetPasswordConfirm","Activate","Signup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b372b63b.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL'\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const PASSWORD_RESET_SUCCESS  = 'PASSWORD_RESET_SUCCESS'\r\nexport const PASSWORD_RESET_FAIL  = 'PASSWORD_RESET_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_FAIL  = 'PASSWORD_RESET_CONFIRM_FAIL'\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS  = 'PASSWORD_RESET_CONFIRM_SUCCESS'\r\n\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\r\nexport const ACTIVATE_SUCCCESS = 'ACTIVATE_SUCCCESS'\r\nexport const ACTIVATE_FAIL = 'ACTIVATE_FAIL'\r\n\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    ACTIVATE_FAIL,\r\n    ACTIVATE_SUCCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated:null,\r\n    user:null\r\n}\r\n\r\nexport default function(state=initialState, action){\r\n    const {type, payload} = action\r\n    switch(type){\r\n        case SIGNUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:false\r\n            } \r\n\r\n        case AUTHENTICATED_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access)\r\n            return{\r\n                ...state,\r\n                isAuthenticated:true,\r\n                access:payload.access,\r\n                refresh:payload.refresh   \r\n            }\r\n        case LOAD_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user:payload\r\n            }\r\n            \r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated:false\r\n            }    \r\n\r\n        case LOAD_USER_FAIL:\r\n            return{\r\n                ...state,\r\n                user:null\r\n            }\r\n        case LOGOUT:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem('access')\r\n            localStorage.removeItem('refresh')\r\n            return{\r\n                ...state,\r\n                isAuthenticated:false,\r\n                access:null,\r\n                refresh:null\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case ACTIVATE_SUCCCESS:\r\n        case ACTIVATE_FAIL:\r\n            return{\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers} from 'redux'\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initalState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import axios from 'axios'\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOAD_USER_FAIL,\r\n    LOAD_USER_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    LOGOUT,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    ACTIVATE_FAIL,\r\n    ACTIVATE_SUCCCESS\r\n} from './types'\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name, email, password, re_password})\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config)\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({uid,token})\r\n    try{\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config)\r\n        dispatch({\r\n            type: ACTIVATE_SUCCCESS,\r\n        })\r\n    }catch(err){\r\n        dispatch({\r\n            type: ACTIVATE_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if(localStorage.getItem('access')){\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({token:localStorage.getItem('access')})\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify`,body, config)\r\n            if (res.data.code !== 'token_not_valid'){\r\n                dispatch({\r\n                    type:AUTHENTICATED_SUCCESS\r\n                })\r\n            }else{\r\n                dispatch({\r\n                    type:AUTHENTICATED_FAIL\r\n                })\r\n            }\r\n        } catch (error) {\r\n            dispatch({\r\n                type:AUTHENTICATED_FAIL\r\n            })\r\n        }\r\n\r\n    }else{\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')){\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':`JWT ${localStorage.getItem('access')}`,\r\n                'Accept':'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.get(\r\n                `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n                config\r\n            )\r\n            dispatch({\r\n                type:LOAD_USER_SUCCESS,\r\n                payload:res.data\r\n            })\r\n            \r\n        }catch(err){\r\n            dispatch({\r\n                type: LOAD_USER_FAIL\r\n            })\r\n        }   \r\n    }else{\r\n        dispatch({\r\n            type: LOAD_USER_FAIL\r\n        })     \r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try{\r\n        const res = await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        })\r\n        dispatch(load_user())\r\n        \r\n    }catch(err){\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email})\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config)\r\n        dispatch({\r\n            type:PASSWORD_RESET_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PASSWORD_RESET_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({uid, token, new_password, re_new_password})\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config)\r\n        dispatch({\r\n            type:PASSWORD_RESET_CONFIRM_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PASSWORD_RESET_CONFIRM_FAIL\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {verify} from '../actions/auth'\r\n\r\nconst Activate = ({verify, match}) => {\r\n    const [verified, setVerified] = useState(false)\r\n    const verify_account = e => {\r\n        const uid = match.params.uid\r\n        const token = match.params.token\r\n        verify(uid, token)\r\n        setVerified(true)\r\n    }\r\n\r\n    // Is user uthenticated ? Redirect to homepage\r\n    if (verified){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className='d-flex flex-column justify-content-center align-items-center' style={{marginTop:'200px'}}>\r\n                <h1>Verify your Account</h1>\r\n                <button onClick={verify_account} style={{marginTop:'50px'}} className='btn btn-primary'>Verify</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(null, {verify})(Activate)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">Hello, world! Welcome to Auth System</h1>\r\n                <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\r\n                <hr className=\"my-4\"/>\r\n                <p>Click the login button</p>\r\n                <p className=\"lead\">\r\n                    <Link className=\"btn btn-primary btn-lg\" to='/login' role=\"button\">Learn more</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../actions/auth'\r\n\r\nconst Login = ({login, isAuthenticated}) => {\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const [loginError, setLoginError] = useState(false)\r\n    \r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        login(email, password)\r\n        if (isAuthenticated==false) setLoginError(true)\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (isAuthenticated){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='email' \r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='password'\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            {loginError?<p>Wrong username or password</p>:''}\r\n            <p className='mt-3'>\r\n                Don't have an account ? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your password ? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React, {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {reset_password} from '../actions/auth'\r\n\r\nconst ResetPassword = ({reset_password}) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email:'',\r\n    })\r\n    const {email, password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        reset_password(email)\r\n        setRequestSent(true)\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (requestSent){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset</h1>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='email' \r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(null, {reset_password})(ResetPassword)\r\n","import React, {useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {reset_password, reset_password_confirm} from '../actions/auth'\r\n\r\nconst ResetPasswordConfirm = ({match, reset_password_confirm}) => {\r\n    const [requestSent, setRequestSent] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        new_password:'',\r\n        re_new_password:''\r\n    })\r\n    const {new_password, re_new_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        const uid = match.params.uid\r\n        const token = match.params.token\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password)\r\n        setRequestSent(true)\r\n\r\n\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (requestSent){\r\n        return <Redirect to='/'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='new password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='confirm new password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(null, {reset_password_confirm})(ResetPasswordConfirm)\r\n","import React, {useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signup} from '../actions/auth'\r\n\r\nconst Signup = ({signup, isAuthenticated}) => {\r\n    const [accountCreated, setaccountCreated] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        re_password:''\r\n    })\r\n    const {name, email, password, re_password} = formData\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if (password === re_password){\r\n            signup(name, email, password, re_password)\r\n            setaccountCreated(true)\r\n        }\r\n    }\r\n\r\n    // Is user uthenticated ?\r\n    // Redirect to homepage\r\n    if (isAuthenticated){\r\n        return <Redirect to='/'/>\r\n    }\r\n    if (accountCreated){\r\n        return <Redirect to='/login'/>\r\n    }\r\n    \r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e=>onSubmit(e)}>\r\n            <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='text' \r\n                        placeholder='name'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='email' \r\n                        placeholder='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='password'\r\n                        name='password'\r\n                        value={password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input \r\n                        className='form-control' \r\n                        type='password' \r\n                        placeholder='password confirmation'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        minLength='6'\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Signup</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Forgot your password ? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n// this is the part where action is passed to the \r\nexport default connect(mapStateToProps, {signup})(Signup)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { logout } from '../actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = ({logout, isAuthenticated}) => {\r\n    const guestLinks = () => (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\r\n            </li>\r\n        </>\r\n    )\r\n\r\n    const authLinks = () => (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\" onClick={logout}>Logout</a>\r\n            </li>\r\n\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                </li>\r\n                {isAuthenticated ? authLinks():guestLinks()}\r\n            </ul>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Navbar)\r\n","import React, {useEffect} from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport { connect } from 'react-redux'\r\nimport {checkAuthenticated, load_user} from '../actions/auth'\r\n\r\nconst Layout = ({children, checkAuthenticated, load_user}) => {\r\n    useEffect(()=>{\r\n        checkAuthenticated()\r\n        load_user()\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {checkAuthenticated, load_user}) (Layout)\r\n","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nimport Activate from './containers/Activate';\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Signup from './containers/Signup';\nimport Layout from './hocs/Layout';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/reset-password' component={ResetPassword}/>\n            <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\n            <Route exact path='/activate/:uid/:token' component={Activate}/>\n            <Route exact path='/signup' component={Signup}/>\n          </Switch>\n        </Layout>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}